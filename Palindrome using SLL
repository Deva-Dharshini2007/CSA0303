#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

struct Node {
    char data;
    struct Node* next;
};

// Helper to create new node
struct Node* newNode(char data) {
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    temp->data = data;
    temp->next = NULL;
    return temp;
}

// Reverse linked list and return new head
struct Node* reverseList(struct Node* head) {
    struct Node* prev = NULL;
    struct Node* curr = head;
    struct Node* next = NULL;
    
    while (curr != NULL) {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    return prev;
}

// Check if linked list is palindrome
bool isPalindrome(struct Node* head) {
    if (!head || !head->next) return true;

    // Find middle (slow-fast pointer)
    struct Node* slow = head;
    struct Node* fast = head;
    while (fast->next && fast->next->next) {
        slow = slow->next;
        fast = fast->next->next;
    }

    // Reverse second half
    struct Node* secondHalf = reverseList(slow->next);
    struct Node* copySecondHalf = secondHalf; // To restore later

    // Compare halves
    struct Node* firstHalf = head;
    bool palindrome = true;
    while (secondHalf != NULL) {
        if (firstHalf->data != secondHalf->data) {
            palindrome = false;
            break;
        }
        firstHalf = firstHalf->next;
        secondHalf = secondHalf->next;
    }

    // Restore list
    slow->next = reverseList(copySecondHalf);

    return palindrome;
}

// Print list
void printList(struct Node* head) {
    while (head) {
        printf("%c -> ", head->data);
        head = head->next;
    }
    printf("NULL\n");
}

int main() {
    // Create linked list: R -> A -> D -> A -> R
    struct Node* head = newNode('R');
    head->next = newNode('A');
    head->next->next = newNode('D');
    head->next->next->next = newNode('A');
    head->next->next->next->next = newNode('R');

    printList(head);

    if (isPalindrome(head))
        printf("The linked list is a palindrome.\n");
    else
        printf("The linked list is not a palindrome.\n");

    printList(head);  // List restored to original

    return 0;
}
